name: Java CI/CD with Maven and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: solocali123#
          MYSQL_DATABASE: examen_civa
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Esperar a que MySQL esté listo
        run: |
          for i in {1..60}; do
            if mysql -h127.0.0.1 -uroot -p$MYSQL_ROOT_PASSWORD -e "SELECT 1" &> /dev/null; then
              echo "✅ MySQL está listo"
              break
            fi
            echo "⏳ Esperando MySQL..."
            sleep 2
          done

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Configurar variables de entorno
        run: |
          echo "spring.datasource.url=jdbc:mysql://127.0.0.1:3306/examen_civa?serverTimezone=America/Lima" > src/main/resources/application-ci.properties
          echo "spring.datasource.username=root" >> src/main/resources/application-ci.properties
          echo "spring.datasource.password=solocali123#" >> src/main/resources/application-ci.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> src/main/resources/application-ci.properties
          echo "spring.jpa.show-sql=true" >> src/main/resources/application-ci.properties
          echo "spring.jpa.properties.hibernate.format_sql=true" >> src/main/resources/application-ci.properties
          echo "spring.jpa.open-in-view=true" >> src/main/resources/application-ci.properties

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run Tests
        run: mvn test

      - name: Upload Test Results (if tests fail)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Instalar Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t jhonnystr/footballer-backend .

      - name: Push Docker image to Docker Hub
        run: docker push jhonnystr/footballer-backend

      - name: Deploy with Docker Compose
        run: |
          docker-compose down
          docker-compose up -d
